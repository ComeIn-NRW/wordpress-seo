{"version":3,"sources":["../src/index.js"],"names":["combineReducers","createReduxStore","register","merge","STORE_NAME","FOCUS_KEYPHRASE_ID","MARKER_STATUS","ANALYZE_ACTION_NAME","analysisReducer","analysisActions","analysisSelectors","defaultAnalysisState","editorReducer","editorActions","editorSelectors","defaultEditorState","formReducer","formActions","formSelectors","defaultFormState","SEO_STORE_NAME","useAnalyze","createSeoStore","initialState","analyze","actions","selectors","analysis","editor","form","reducer","controls","payload","paper","keyphrases","config","registerSeoStore"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,gBAA1B,EAA4CC,QAA5C,QAA4D,iBAA5D;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,UAAT,EAAqBC,kBAArB,EAAyCC,aAAzC,QAA8D,oBAA9D;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAOC,eAAP,IAA0BC,eAA1B,EAA2CC,iBAA3C,EAA8DC,oBAA9D,QAA0F,kBAA1F;AACA,OAAOC,aAAP,IAAwBC,aAAxB,EAAuCC,eAAvC,EAAwDC,kBAAxD,QAAkF,gBAAlF;AACA,OAAOC,WAAP,IAAsBC,WAAtB,EAAmCC,aAAnC,EAAkDC,gBAAlD,QAA0E,cAA1E;AACA,SAASf,UAAU,IAAIgB,cAAvB;AACA,SAASf,kBAAT;AACA,SAASC,aAAT;AAEA,SAASe,UAAT,QAA2B,kBAA3B;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,QAAiC;AAAA,MAA/B;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAA+B;AACvD,SAAOvB,gBAAgB,CAAEG,UAAF,EAAc;AACpCqB,IAAAA,OAAO,EAAE,EACR,GAAGhB,eADK;AAER,SAAGI,aAFK;AAGR,SAAGI;AAHK,KAD2B;AAMpCS,IAAAA,SAAS,EAAE,EACV,GAAGhB,iBADO;AAEV,SAAGI,eAFO;AAGV,SAAGI;AAHO,KANyB;AAWpCK,IAAAA,YAAY,EAAEpB,KAAK,CAClB,EADkB,EAElB;AACCwB,MAAAA,QAAQ,EAAEhB,oBADX;AAECiB,MAAAA,MAAM,EAAEb,kBAFT;AAGCc,MAAAA,IAAI,EAAEV;AAHP,KAFkB,EAOlBI,YAPkB,CAXiB;AAoBpCO,IAAAA,OAAO,EAAE9B,eAAe,CAAE;AACzB2B,MAAAA,QAAQ,EAAEnB,eADe;AAEzBoB,MAAAA,MAAM,EAAEhB,aAFiB;AAGzBiB,MAAAA,IAAI,EAAEb;AAHmB,KAAF,CApBY;AAyBpCe,IAAAA,QAAQ,EAAE;AACT,OAAExB,mBAAF,GAAyB;AAAA,YAAQ;AAAEyB,UAAAA,OAAO,EAAE;AAAEC,YAAAA,KAAF;AAASC,YAAAA,UAAT;AAAqBC,YAAAA;AAArB;AAAX,SAAR;AAAA,eAAwDX,OAAO,CAAES,KAAF,EAASC,UAAT,EAAqBC,MAArB,CAA/D;AAAA;AADhB;AAzB0B,GAAd,CAAvB;AA6BA,CA9BD;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,gBAAgB,GAAG,YAA2C;AAAA,MAAzC;AAAEb,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA;AAArB,GAAyC,uEAAR,EAAQ;AACnEtB,EAAAA,QAAQ,CAAEoB,cAAc,CAAE;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAF,CAAhB,CAAR;AACA,CAFD;;AAIA,eAAeY,gBAAf","sourcesContent":["import { combineReducers, createReduxStore, register } from \"@wordpress/data\";\nimport { merge } from \"lodash\";\nimport { STORE_NAME, FOCUS_KEYPHRASE_ID, MARKER_STATUS } from \"./common/constants\";\nimport { ANALYZE_ACTION_NAME } from \"./analysis/constants\";\nimport analysisReducer, { analysisActions, analysisSelectors, defaultAnalysisState } from \"./analysis/slice\";\nimport editorReducer, { editorActions, editorSelectors, defaultEditorState } from \"./editor/slice\";\nimport formReducer, { formActions, formSelectors, defaultFormState } from \"./form/slice\";\nexport { STORE_NAME as SEO_STORE_NAME };\nexport { FOCUS_KEYPHRASE_ID };\nexport { MARKER_STATUS };\n\nexport { useAnalyze } from \"./analysis/hooks\";\n\n/** @typedef {import(\"@wordpress/data/src/types\").WPDataStore} WPDataStore */\n\n/**\n * Creates a WP data store for managing SEO data.\n *\n * @param {Object} initialState Initial state.\n * @param {function} analyze Runs an analysis.\n *\n * @returns {WPDataStore} The WP data store.\n */\nconst createSeoStore = ( { initialState, analyze } ) => {\n\treturn createReduxStore( STORE_NAME, {\n\t\tactions: {\n\t\t\t...analysisActions,\n\t\t\t...editorActions,\n\t\t\t...formActions,\n\t\t},\n\t\tselectors: {\n\t\t\t...analysisSelectors,\n\t\t\t...editorSelectors,\n\t\t\t...formSelectors,\n\t\t},\n\t\tinitialState: merge(\n\t\t\t{},\n\t\t\t{\n\t\t\t\tanalysis: defaultAnalysisState,\n\t\t\t\teditor: defaultEditorState,\n\t\t\t\tform: defaultFormState,\n\t\t\t},\n\t\t\tinitialState,\n\t\t),\n\t\treducer: combineReducers( {\n\t\t\tanalysis: analysisReducer,\n\t\t\teditor: editorReducer,\n\t\t\tform: formReducer,\n\t\t} ),\n\t\tcontrols: {\n\t\t\t[ ANALYZE_ACTION_NAME ]: async ( { payload: { paper, keyphrases, config } } ) => analyze( paper, keyphrases, config ),\n\t\t},\n\t} );\n};\n\n/**\n * Registers the SEO store to WP data's default registry.\n *\n * @param {Object} [initialState] Initial state.\n * @param {function} analyze Runs an analysis.\n *\n * @returns {void}\n */\nconst registerSeoStore = ( { initialState = {}, analyze } = {} ) => {\n\tregister( createSeoStore( { initialState, analyze } ) );\n};\n\nexport default registerSeoStore;\n"],"file":"index.js"}