{"version":3,"sources":["../../../src/google-preview/containers/google-preview-container.js"],"names":["useDispatch","useSelect","useCallback","useMemo","useState","SEO_STORE_NAME","get","PropTypes","useReplacementVariables","useBaseUrl","permalink","slug","url","baseUrl","URL","href","e","window","location","replace","RegExp","endsWith","GooglePreviewContainer","as","Component","restProps","title","select","selectSeoTitle","description","selectMetaDescription","selectSlug","date","selectDate","focusKeyphrase","selectKeyphrase","morphologyResults","selectResearchResults","isCornerstone","selectIsCornerstone","selectPermalink","previewMode","setPreviewMode","updateSlug","updateSeoTitle","updateMetaDescription","data","focusKeyphraseWordForms","flat","Date","toLocaleDateString","undefined","day","month","year","replacementVariables","recommendedReplacementVariables","handleChange","key","value","console","warn","propTypes","elementType","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import { useDispatch, useSelect } from \"@wordpress/data\";\nimport { useCallback, useMemo, useState } from \"@wordpress/element\";\nimport { SEO_STORE_NAME } from \"@yoast/seo-store\";\nimport { get } from \"lodash\";\nimport { PropTypes } from \"prop-types\";\nimport { useReplacementVariables } from \"../../hooks/useReplacementVariables\";\n\n/**\n * Retrieves the base URL from the permalink.\n * Uses a fallback URL in order to keep working when there is no permalink (development environment).\n *\n * @param {string} permalink    The permalink.\n * @param {string} slug         The slug.\n *\n * @returns {string} The base URL.\n */\nconst useBaseUrl = ( permalink, slug ) => {\n\treturn useMemo( () => {\n\t\tlet url;\n\t\tlet baseUrl = \"\";\n\t\ttry {\n\t\t\turl = new URL( permalink );\n\t\t\tbaseUrl = url.href;\n\t\t} catch ( e ) {\n\t\t\t// Fallback on current href\n\t\t\tbaseUrl = window.location.href;\n\t\t}\n\n\t\t// Strip slug from the url.\n\t\tbaseUrl = baseUrl.replace( new RegExp( slug + \"$\" ), \"\" );\n\t\t// Enforce ending with a slash because of the internal handling in the SnippetEditor component.\n\t\tif ( ! baseUrl.endsWith( \"/\" ) ) {\n\t\t\tbaseUrl += \"/\";\n\t\t}\n\n\t\treturn baseUrl;\n\t}, [ permalink ] );\n};\n\n/**\n * Handles known data for a Google preview component.\n *\n * @param {JSX.Element} as A Google preview component.\n * @param {Object} restProps Props to pass to the Google preview component, that are unhandled by this container.\n *\n * @returns {JSX.Element} A wrapped Google preview component.\n */\nconst GooglePreviewContainer = ( { as: Component, ...restProps } ) => {\n\tconst title = useSelect( select => select( SEO_STORE_NAME ).selectSeoTitle() );\n\tconst description = useSelect( select => select( SEO_STORE_NAME ).selectMetaDescription() );\n\tconst slug = useSelect( select => select( SEO_STORE_NAME ).selectSlug() );\n\tlet date = useSelect( select => select( SEO_STORE_NAME ).selectDate() );\n\tconst focusKeyphrase = useSelect( select => select( SEO_STORE_NAME ).selectKeyphrase() );\n\tconst morphologyResults = useSelect( select => select( SEO_STORE_NAME ).selectResearchResults( \"morphology\" ) );\n\tconst isCornerstone = useSelect( select => select( SEO_STORE_NAME ).selectIsCornerstone() );\n\tconst permalink = useSelect( select => select( SEO_STORE_NAME ).selectPermalink() );\n\tconst [ previewMode, setPreviewMode ] = useState( \"mobile\" );\n\tconst { updateSlug, updateSeoTitle, updateMetaDescription } = useDispatch( SEO_STORE_NAME );\n\n\tconst data = useMemo( () => ( { title, description, slug } ), [ title, description, slug ] );\n\tconst focusKeyphraseWordForms = useMemo( () => get( morphologyResults, \"keyphraseForms\", [] ).flat(), [ morphologyResults ] );\n\n\tif ( date !== \"\" ) {\n\t\t// eslint-disable-next-line no-undefined\n\t\tdate = useMemo( () => new Date( date ).toLocaleDateString( undefined, {\n\t\t\tday: \"numeric\",\n\t\t\tmonth: \"short\",\n\t\t\tyear: \"numeric\",\n\t\t} ), [ date ] );\n\t}\n\n\tconst baseUrl = useBaseUrl( permalink, slug );\n\n\tconst {\n\t\treplacementVariables,\n\t\trecommendedReplacementVariables,\n\t} = useReplacementVariables();\n\n\tconst handleChange = useCallback( ( key, value ) => {\n\t\tswitch ( key ) {\n\t\t\tcase \"mode\":\n\t\t\t\tsetPreviewMode( value );\n\t\t\t\tbreak;\n\t\t\tcase \"slug\":\n\t\t\t\tupdateSlug( value );\n\t\t\t\tbreak;\n\t\t\tcase \"title\":\n\t\t\t\tupdateSeoTitle( value );\n\t\t\t\tbreak;\n\t\t\tcase \"description\":\n\t\t\t\tupdateMetaDescription( value );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn( \"Unhandled change event in Google Preview container\", key, value );\n\t\t\t\tbreak;\n\t\t}\n\t}, [ setPreviewMode ] );\n\n\treturn <Component\n\t\tbaseUrl={ baseUrl }\n\t\tdata={ data }\n\t\tdate={ date }\n\t\tkeyword={ focusKeyphrase }\n\t\tmode={ previewMode }\n\t\twordsToHighlight={ focusKeyphraseWordForms }\n\t\treplacementVariables={ replacementVariables }\n\t\trecommendedReplacementVariables={ recommendedReplacementVariables }\n\t\tisCornerstone={ isCornerstone }\n\t\tonChange={ handleChange }\n\t\t{ ...restProps }\n\t/>;\n};\n\nGooglePreviewContainer.propTypes = {\n\tas: PropTypes.elementType.isRequired,\n};\n\nGooglePreviewContainer.defaultProps = {};\n\nexport default GooglePreviewContainer;\n"],"file":"google-preview-container.js"}