{"version":3,"sources":["../src/index.js"],"names":["registerSeoStore","mapValues","createAnalysis","createAnalysisTypeReplacementVariables","createSeoProvider","SEO_STORE_NAME","FOCUS_KEYPHRASE_ID","useAnalyze","MARKER_STATUS","ReadabilityResultsContainer","SeoResultsContainer","default","GooglePreviewContainer","FacebookContainer","TwitterContainer","replacementVariableConfigurations","useSeoContext","createSeoIntegration","analysis","workerUrl","analysisWorkerUrl","dependencies","analysisDependencies","configuration","analysisConfiguration","locale","contentTypes","initialState","analyze","analysisWorker","analysisTypeReplacementVariables","unregisterReplacementVariables","SeoProvider"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,gBAAP,MAA6B,kBAA7B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,sCAAP,MAAmD,yBAAnD;AACA,SAASC,iBAAT,QAAkC,eAAlC;AAEA,SAASC,cAAT,EAAyBC,kBAAzB,EAA6CC,UAA7C,EAAyDC,aAAzD,QAA8E,kBAA9E;AACA,SAASC,2BAAT,EAAsCC,mBAAtC,QAAiE,+BAAjE;AACA,SAASC,OAAO,IAAIC,sBAApB,QAAkD,sDAAlD;AACA,SAASD,OAAO,IAAIE,iBAApB,QAA6C,wCAA7C;AACA,SAASF,OAAO,IAAIG,gBAApB,QAA4C,uCAA5C;oDACmD,wC;+CAAvCC,iC;AACZ,SAASC,aAAT,QAA8B,eAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,oBAAoB,GAAG,kBAQjB;AAAA,MARyB;AACpCC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,SAAS,EAAEC,iBADF;AAETC,MAAAA,YAAY,EAAEC,oBAFL;AAGTC,MAAAA,aAAa,EAAEC,qBAAqB,GAAG;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAH9B,KAD0B;AAMpCC,IAAAA,YAAY,GAAG,EANqB;AAOpCC,IAAAA,YAAY,GAAG;AAPqB,GAQzB,uEAAR,EAAQ;AACX,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA8B,MAAM3B,cAAc,CAAE;AACzDiB,IAAAA,SAAS,EAAEC,iBAD8C;AAEzDC,IAAAA,YAAY,EAAEC,oBAF2C;AAGzDC,IAAAA,aAAa,EAAEC;AAH0C,GAAF,CAAxD;AAMAxB,EAAAA,gBAAgB,CAAE;AAAE2B,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAF,CAAhB;AAEA,QAAM;AACLE,IAAAA,gCADK;AAELC,IAAAA;AAFK,MAGF5B,sCAAsC,CAAEF,SAAS,CAAEyB,YAAF,EAAgB,mCAAhB,CAAX,CAH1C;AAKA,SAAO;AACNG,IAAAA,cADM;AAENC,IAAAA,gCAFM;AAGNC,IAAAA,8BAHM;AAINC,IAAAA,WAAW,EAAE5B,iBAAiB,CAAE;AAAE0B,MAAAA;AAAF,KAAF;AAJxB,GAAP;AAMA,CA5BD;;AA8BA,eAAeb,oBAAf","sourcesContent":["/**\n * @typedef {Object} AnalysisType\n *\n * @property {string} name A unique name.\n * @property {Object.<string, Object>?} assessorConfigurations The assessor configurations, keyed by assessor name.\n * @property {ReplacementVariableConfiguration[]?} replacementVariableConfigurations The replacement variable configurations.\n */\n\n/**\n * @typedef AnalysisConfig\n *\n * @property {string} workerUrl The URL of the analysis worker.\n * @property {string[]} dependencies The dependencies to load in the worker.\n * @property {Object} [configuration] The analysis configuration. Defaults to an English (US) locale.\n * @property {Object.<string, AnalysisType>} [types] The different analysis types and their configuration.\n */\n\n/**\n * @typedef {Object} SeoIntegrationInterface\n *\n * @property {AnalysisWorkerWrapper} analysisWorker The analysis worker wrapper.\n * @property {Object<string, ReplacementVariablesInterface[]>} analysisTypeReplacementVariables Replacement variables per analysis type.\n * @property {function} unregisterReplacementVariables Unregisters the replacement variables from the analysis.\n */\n\nimport registerSeoStore from \"@yoast/seo-store\";\nimport { mapValues } from \"lodash\";\nimport createAnalysis from \"./analysis/analysis\";\nimport createAnalysisTypeReplacementVariables from \"./replacement-variables\";\nimport { createSeoProvider } from \"./seo-context\";\n\nexport { SEO_STORE_NAME, FOCUS_KEYPHRASE_ID, useAnalyze, MARKER_STATUS } from \"@yoast/seo-store\";\nexport { ReadabilityResultsContainer, SeoResultsContainer } from \"./analysis-results/containers\";\nexport { default as GooglePreviewContainer } from \"./google-preview/containers/google-preview-container\";\nexport { default as FacebookContainer } from \"./social/containers/facebook-container\";\nexport { default as TwitterContainer } from \"./social/containers/twitter-container\";\nexport * as replacementVariableConfigurations from \"./replacement-variables/configurations\";\nexport { useSeoContext } from \"./seo-context\";\n\n/**\n * Creates the SEO integration.\n *\n * @param {AnalysisConfig} analysis Analysis-specific configuration.\n * @param {Object.<string, Object>} [initialState] The initial state for the SEO store.\n *\n * @returns {Promise<SeoIntegrationInterface>} The promise of the SEO integration interface.\n */\nconst createSeoIntegration = async ( {\n\tanalysis: {\n\t\tworkerUrl: analysisWorkerUrl,\n\t\tdependencies: analysisDependencies,\n\t\tconfiguration: analysisConfiguration = { locale: \"en_US\" },\n\t},\n\tcontentTypes = {},\n\tinitialState = {},\n} = {} ) => {\n\tconst { analyze, analysisWorker } = await createAnalysis( {\n\t\tworkerUrl: analysisWorkerUrl,\n\t\tdependencies: analysisDependencies,\n\t\tconfiguration: analysisConfiguration,\n\t} );\n\n\tregisterSeoStore( { initialState, analyze } );\n\n\tconst {\n\t\tanalysisTypeReplacementVariables,\n\t\tunregisterReplacementVariables,\n\t} = createAnalysisTypeReplacementVariables( mapValues( contentTypes, \"replacementVariableConfigurations\" ) );\n\n\treturn {\n\t\tanalysisWorker,\n\t\tanalysisTypeReplacementVariables,\n\t\tunregisterReplacementVariables,\n\t\tSeoProvider: createSeoProvider( { analysisTypeReplacementVariables } ),\n\t};\n};\n\nexport default createSeoIntegration;\n"],"file":"index.js"}