{"version":3,"sources":["../../src/replacement-variables/index.js"],"names":["addFilter","applyFilters","removeFilter","createReplacementVariables","get","identity","mapValues","registerApplyReplacementVariables","applyers","applyReplacementVariables","paper","config","analysisType","createAnalysisTypeReplacementVariables","configurations","filteredConfigurations","analysisTypeReplacementVariables","analysisTypeConfigurations","filteredAnalysisTypeConfigurations","unregisterApplyReplacementVariables"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,EAAkCC,YAAlC,QAAsD,kBAAtD;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,SAAxB,QAAyC,QAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,iCAAiC,GAAKC,QAAF,IAAgB;AACzD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC,QAAMC,yBAAyB,GAAG,CAAEC,KAAF;AAAA,QAAS;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,KAAT;AAAA,WACjCN,SAAS,CAAEI,KAAF,EAASN,GAAG,CAAEI,QAAF,EAAYI,YAAZ,EAA0BP,QAA1B,CAAZ,CADwB;AAAA,GAAlC;;AAIAL,EAAAA,SAAS,CACR,sCADQ,EAER,gDAFQ,EAGRS,yBAHQ,EAIR,EAJQ,CAAT;AAOA,SAAO,MAAMP,YAAY,CAAE,sCAAF,EAA0C,gDAA1C,CAAzB;AACA,CArBD;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMW,sCAAsC,GAAKC,cAAF,IAAsB;AACpE,QAAMC,sBAAsB,GAAGd,YAAY,CAAE,0DAAF,EAA8Da,cAA9D,CAA3C;AACA,QAAME,gCAAgC,GAAGV,SAAS,CACjDS,sBADiD,EAEjD,CAAEE,0BAAF,EAA8BL,YAA9B,KAAgD;AAC/C,UAAMM,kCAAkC,GAAGjB,YAAY,CACrD,6CAA6CW,YAAc,iBADN,EAEtDK,0BAFsD,EAGtD;AAAEL,MAAAA;AAAF,KAHsD,CAAvD;AAKA,WAAOT,0BAA0B,CAAEe,kCAAF,CAAjC;AACA,GATgD,CAAlD;AAWA,QAAMC,mCAAmC,GAAGZ,iCAAiC,CAAED,SAAS,CAAEU,gCAAF,EAAoC,OAApC,CAAX,CAA7E;AAEA,SAAO;AACNA,IAAAA,gCADM;AAENG,IAAAA;AAFM,GAAP;AAIA,CAnBD;;AAqBA,eAAeN,sCAAf","sourcesContent":["import { addFilter, applyFilters, removeFilter } from \"@wordpress/hooks\";\nimport createReplacementVariables from \"@yoast/replacement-variables\";\nimport { get, identity, mapValues } from \"lodash\";\n\n/**\n * Registers the replacement variables to be used inside the analysis.\n *\n * @param {Object.<string, function>} applyers Apply functions, keyed per analysis type.\n *\n * @returns {function} Unregister function.\n */\nconst registerApplyReplacementVariables = ( applyers ) => {\n\t/**\n\t * Creates an apply replacement variables function for objects for the current analysis type.\n\t *\n\t * @param {Object} paper The paper to analyze.\n\t * @param {string} analysisType The current analysis type to apply the replacement variables for.\n\t *\n\t * @returns {function(Object): string} The apply replacement variables function for objects.\n\t */\n\tconst applyReplacementVariables = ( paper, { config: { analysisType } } ) => (\n\t\tmapValues( paper, get( applyers, analysisType, identity ) )\n\t);\n\n\taddFilter(\n\t\t\"yoast.seoStore.analysis.preparePaper\",\n\t\t\"yoast/seoIntegration/applyReplacementVariables\",\n\t\tapplyReplacementVariables,\n\t\t10,\n\t);\n\n\treturn () => removeFilter( \"yoast.seoStore.analysis.preparePaper\", \"yoast/seoIntegration/applyReplacementVariables\" );\n};\n\n/**\n * Creates and registers the replacement variables to be used inside the analysis.\n *\n * @param {Object.<string, ReplacementVariableConfiguration[]>} configurations The replacement variables configurations per analysis type.\n *\n * @returns {{\n *   analysisTypeReplacementVariables: Object.<string, ReplacementVariablesInterface[]>,\n *   unregisterApplyReplacementVariables: function\n * }} The replacement variables interface.\n */\nconst createAnalysisTypeReplacementVariables = ( configurations ) => {\n\tconst filteredConfigurations = applyFilters( \"yoast.seoIntegration.replacementVariables.configurations\", configurations );\n\tconst analysisTypeReplacementVariables = mapValues(\n\t\tfilteredConfigurations,\n\t\t( analysisTypeConfigurations, analysisType ) => {\n\t\t\tconst filteredAnalysisTypeConfigurations = applyFilters(\n\t\t\t\t`yoast.seoIntegration.replacementVariables.${ analysisType }.configurations`,\n\t\t\t\tanalysisTypeConfigurations,\n\t\t\t\t{ analysisType },\n\t\t\t);\n\t\t\treturn createReplacementVariables( filteredAnalysisTypeConfigurations );\n\t\t},\n\t);\n\tconst unregisterApplyReplacementVariables = registerApplyReplacementVariables( mapValues( analysisTypeReplacementVariables, \"apply\" ) );\n\n\treturn {\n\t\tanalysisTypeReplacementVariables,\n\t\tunregisterApplyReplacementVariables,\n\t};\n};\n\nexport default createAnalysisTypeReplacementVariables;\n"],"file":"index.js"}